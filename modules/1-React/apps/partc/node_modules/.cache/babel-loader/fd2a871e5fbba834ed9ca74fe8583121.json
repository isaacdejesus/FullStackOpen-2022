{"ast":null,"code":"var _jsxFileName = \"/home/isaac/git/FullStackOpen-2022/modules/1-React/partc/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Display = _ref => {\n  let {\n    counter\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: counter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2,\n    columnNumber: 35\n  }, this);\n};\n\n_c = Display;\n\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: props.onClick,\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Button;\n\nconst App = () => {\n  _s();\n\n  const [counter, setCounter] = useState(0); //creates hook and sets value to 0\n  //Everytime SetCounter modifies state the component re-renders in order to reflect changes\n  //setCounter is a state modifying function. \n  //Everytime setCounter is called the App component is re-rendered to show changes\n\n  const increeaseByOne = () => setCounter(counter + 1); //function to change state/increase counter by one\n\n\n  const decreaseByOne = () => setCounter(counter - 1);\n\n  const setToZero = () => setCounter(0); //resets count to 0\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Display, {\n      counter: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: increeaseByOne,\n      text: \"Plus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: setToZero,\n      text: \"Zero\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: decreaseByOne,\n      text: \"Minus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n/* uncomment to see deconstruction and helper function in action\nconst Hello = ({name, age}) => { //deconstructs the props object and assigns values into vars name and age\n    //const {name, age} = props  //since props is an object, can use deconstruction to assign values to const. use above method instead\n    //props objects has the form\n    //props = {\n    //name: \"isaaccc\",\n    //age: 33,\n    //}\n    //Above, we deconstruct prop into vars to be used instead of passing entire prop\n    const bornYear = () =>  new Date().getFullYear() - age\n    return (\n        <div>\n            <p>\n                Hello {props.name}, you are {props.age} years old\n        </p>\n        <p> So you were probably born in {bornYear()}</p>\n        </div>\n    )\n}\nconst App = () =>{\n    const name = 'Isaac'\n    const age = 23\n  return (\n      <div>\n        <h1>Greetings</h1>\n        <Hello name = \"Maya\" age={26 + 10}/>\n        <Hello name = {name} age = {age}/>\n      </div>\n  );\n}\n*/\n\n\n_s(App, \"mgO7WMHyhiBnLtH7uw/qAj2Cy9A=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Display\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/home/isaac/git/FullStackOpen-2022/modules/1-React/partc/src/App.js"],"names":["useState","Display","counter","Button","props","onClick","text","App","setCounter","increeaseByOne","decreaseByOne","setToZero"],"mappings":";;;AAAA,SAAQA,QAAR,QAAwB,OAAxB;;;AACA,MAAMC,OAAO,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,sBAAkB;AAAA,cAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,UAAlB;AAAA,CAAhB;;KAAMD,O;;AAGN,MAAME,MAAM,GAAIC,KAAD,IAAW;AACtB,sBACI;AAAQ,IAAA,OAAO,EAAIA,KAAK,CAACC,OAAzB;AAAA,cACKD,KAAK,CAACE;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAND;;MAAMH,M;;AAON,MAAMI,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACL,OAAD,EAAUM,UAAV,IAAwBR,QAAQ,CAAC,CAAD,CAAtC,CADc,CAC6B;AAC3C;AACA;AACA;;AACA,QAAMS,cAAc,GAAG,MAAMD,UAAU,CAACN,OAAO,GAAG,CAAX,CAAvC,CALc,CAKwC;;;AACtD,QAAMQ,aAAa,GAAG,MAAMF,UAAU,CAACN,OAAO,GAAG,CAAX,CAAtC;;AACA,QAAMS,SAAS,GAAG,MAAMH,UAAU,CAAC,CAAD,CAAlC,CAPc,CAO0B;;;AACxC,sBACI;AAAA,4BACI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAIN;AAApB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AACI,MAAA,OAAO,EAAIO,cADf;AAEI,MAAA,IAAI,EAAG;AAFX;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI,QAAC,MAAD;AACI,MAAA,OAAO,EAAIE,SADf;AAEI,MAAA,IAAI,EAAG;AAFX;AAAA;AAAA;AAAA;AAAA,YANJ,eAUI,QAAC,MAAD;AACI,MAAA,OAAO,EAAID,aADf;AAEI,MAAA,IAAI,EAAG;AAFX;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAzBD;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAxDMH,G;;MAAAA,G;AAyDN,eAAeA,GAAf","sourcesContent":["import {useState } from 'react'\nconst Display = ({ counter }) => (<div>{counter}</div>)\n\n\nconst Button = (props) => {\n    return (\n        <button onClick = {props.onClick}>\n            {props.text}\n        </button>\n    )\n}\nconst App = () => {\n    const [counter, setCounter] = useState(0)  //creates hook and sets value to 0\n    //Everytime SetCounter modifies state the component re-renders in order to reflect changes\n    //setCounter is a state modifying function. \n    //Everytime setCounter is called the App component is re-rendered to show changes\n    const increeaseByOne = () => setCounter(counter + 1); //function to change state/increase counter by one\n    const decreaseByOne = () => setCounter(counter - 1);\n    const setToZero = () => setCounter(0);  //resets count to 0\n    return (\n        <div>\n            <Display counter = {counter}/>\n            <Button\n                onClick = {increeaseByOne}\n                text = 'Plus'\n            />\n            <Button\n                onClick = {setToZero}\n                text = \"Zero\"\n            />\n            <Button\n                onClick = {decreaseByOne}\n                text = \"Minus\"\n            />\n        </div>\n    )\n}\n/* uncomment to see deconstruction and helper function in action\nconst Hello = ({name, age}) => { //deconstructs the props object and assigns values into vars name and age\n    //const {name, age} = props  //since props is an object, can use deconstruction to assign values to const. use above method instead\n    //props objects has the form\n    //props = {\n    //name: \"isaaccc\",\n    //age: 33,\n    //}\n    //Above, we deconstruct prop into vars to be used instead of passing entire prop\n    const bornYear = () =>  new Date().getFullYear() - age\n    return (\n        <div>\n            <p>\n                Hello {props.name}, you are {props.age} years old\n        </p>\n        <p> So you were probably born in {bornYear()}</p>\n        </div>\n    )\n}\nconst App = () =>{\n    const name = 'Isaac'\n    const age = 23\n  return (\n      <div>\n        <h1>Greetings</h1>\n        <Hello name = \"Maya\" age={26 + 10}/>\n        <Hello name = {name} age = {age}/>\n      </div>\n  );\n}\n*/\nexport default App;\n"]},"metadata":{},"sourceType":"module"}